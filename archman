#!/usr/bin/sh

# Download man pages from https://man.archlinux.org/man

# Some basic information
PROGRAM_NAME=$(basename $0)
PROGRAM_VERSION="1.0.2"
MAN_ARCHLINUX="https://man.archlinux.org/man"
CACHE_PLACE="${XDG_CACHE_HOME}/${PROGRAM_NAME}"

###
# Globals:      PAGE
#               CACHE_PLACE
#               MAN_ARCHLINUX
# Arguments:    one manual page
# Returns:      0 on success, 1 otherwise
###
fetch_man_page() {
    local PAGE=$1
    [[ ${PAGE} =~ .[0-9]$ ]] && local SECTION="${PAGE##*.}"
    local PAGE="${PAGE%.*}"
        
    if [[ -f ${CACHE_PLACE}/${PAGE} ]]; then
        ${PAGER} ${CACHE_PLACE}/${PAGE}
        return 0
    fi

    if [[ -z ${SECTION} ]]; then
        for i in {1..8} 0 n l; do
            curl ${MAN_ARCHLINUX}/${PAGE}.${i}.en.txt -o ${CACHE_PLACE}/${PAGE} &>/dev/null
            if check_valid_page ${PAGE}; then
                ${PAGER} ${CACHE_PLACE}/${PAGE}
                return 0
            fi
        done
    else
        curl ${MAN_ARCHLINUX}/${PAGE}.${SECTION}.en.txt \
        -o ${CACHE_PLACE}/${PAGE} &>/dev/null
        if check_valid_page ${PAGE}; then
            ${PAGER} ${CACHE_PLACE}/${PAGE}
            return 0
        fi
        SECTION=" in section ${SECTION}"
    fi

    echo "Manual page for '${PAGE}'${SECTION} not found"
    rm -f ${CACHE_PLACE}/${PAGE}
    return 1
}

###
# Check if manual page downloaded is in .txt format
# Globals:      CACHE_PLACE
# Argument:     file to check if in the right format
# Returns:      0 on success, 1 otherwise
###
check_valid_page() {
    if file ${CACHE_PLACE}/${1} | grep "HTML document" &>/dev/null ||
        file ${CACHE_PLACE}/${1} | grep "empty" &>/dev/null; then
        return 1
    fi

    return 0
}

main() {
    [[ -z $@ ]] && echo "${PROGRAM_NAME}: expected argument" && exit 1

    [[ -d ${CACHE_PLACE} ]] || mkdir ${CACHE_PLACE}

    for ARG in $@; do
        fetch_man_page $ARG
    done
}
main $@
